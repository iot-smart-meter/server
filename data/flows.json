[
    {
        "id": "4668cb4464f76ef5",
        "type": "tab",
        "label": "Website Homescreen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "942dc37616da95b9",
        "type": "tab",
        "label": "Sensor Data Collection",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "01d5ea2b4b2aded7",
        "type": "tab",
        "label": "Debug Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d9a7c2f1673eaec9",
        "type": "tab",
        "label": "Influx Test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4be1249df243f360",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2c287116b37742e8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "10628167c71ff284",
        "type": "ui_tab",
        "name": "Home",
        "icon": "mi-home",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "798c329928815309",
        "type": "ui_group",
        "name": "Uhrzeit",
        "tab": "10628167c71ff284",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5456fd1ee54e6f5b",
        "type": "mongodb",
        "hostname": "mongo",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "IoTSmartMeter",
        "name": ""
    },
    {
        "id": "772344094d032536",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "d1108013eedb4448",
        "type": "inject",
        "z": "4668cb4464f76ef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "e4362e3f947bfb54"
            ]
        ]
    },
    {
        "id": "a968c9e9907ecace",
        "type": "ui_text",
        "z": "4668cb4464f76ef5",
        "group": "798c329928815309",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "e4362e3f947bfb54",
        "type": "function",
        "z": "4668cb4464f76ef5",
        "name": "convert Timestamp",
        "func": "const fixedStr = (num) => {\n    return (\"0\" + num).slice(-2)\n}\nlet timestamp = new Date(msg.payload);\nconst [hour, minutes, seconds] = [\n    timestamp.getHours(),\n    timestamp.getMinutes(),\n    timestamp.getSeconds(),\n];\nmsg.payload = fixedStr(hour) + \":\" + fixedStr(minutes) + \":\" + fixedStr(seconds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 100,
        "wires": [
            [
                "a968c9e9907ecace"
            ]
        ]
    },
    {
        "id": "e6256739bb89246f",
        "type": "http in",
        "z": "942dc37616da95b9",
        "name": "",
        "url": "sensor",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "f54cad9c07529db3"
            ]
        ]
    },
    {
        "id": "f54cad9c07529db3",
        "type": "RequestValidator",
        "z": "942dc37616da95b9",
        "name": "",
        "group_name": "",
        "query": "{}",
        "reqbody": "{\"identifier\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":false},\"description\":{\"type\":\"string\",\"required\":false},\"current_value\":{\"type\":\"number\",\"required\":true},\"total_value\":{\"type\":\"number\",\"required\":true},\"current_time\":{\"type\":\"date\",\"required\":false}}",
        "method": "POST",
        "includeHeader": false,
        "headerSchema": "",
        "convert": true,
        "x": 370,
        "y": 400,
        "wires": [
            [
                "370d6811da2dcec6"
            ],
            [
                "fa41242f5012781f",
                "8608ada3ee7e3084"
            ]
        ]
    },
    {
        "id": "fa41242f5012781f",
        "type": "http response",
        "z": "942dc37616da95b9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 440,
        "wires": []
    },
    {
        "id": "016875d485a1001d",
        "type": "comment",
        "z": "942dc37616da95b9",
        "name": "Error node at the bottom",
        "info": "",
        "x": 390,
        "y": 440,
        "wires": []
    },
    {
        "id": "8608ada3ee7e3084",
        "type": "debug",
        "z": "942dc37616da95b9",
        "name": "POST /sensor Invalid",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 480,
        "wires": []
    },
    {
        "id": "3844a813438a2714",
        "type": "http response",
        "z": "942dc37616da95b9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1430,
        "y": 380,
        "wires": []
    },
    {
        "id": "370d6811da2dcec6",
        "type": "switch",
        "z": "942dc37616da95b9",
        "name": "has time",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "current_time",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 380,
        "wires": [
            [
                "976486d9162394d9"
            ],
            [
                "07ddb1fc7aabfaee"
            ]
        ]
    },
    {
        "id": "48fd90e793a4a8b2",
        "type": "debug",
        "z": "942dc37616da95b9",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 460,
        "wires": []
    },
    {
        "id": "07ddb1fc7aabfaee",
        "type": "function",
        "z": "942dc37616da95b9",
        "name": "add time",
        "func": "msg.payload.current_time = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 400,
        "wires": [
            [
                "976486d9162394d9"
            ]
        ]
    },
    {
        "id": "976486d9162394d9",
        "type": "switch",
        "z": "942dc37616da95b9",
        "name": "has name",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "name",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 380,
        "wires": [
            [
                "217f34ee3eaf88f8",
                "cdf4ebd091480a9a"
            ],
            [
                "217f34ee3eaf88f8"
            ]
        ]
    },
    {
        "id": "217f34ee3eaf88f8",
        "type": "switch",
        "z": "942dc37616da95b9",
        "name": "has description",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "description",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "30d474ccf61697d5",
                "785ebd3632ffdd9a"
            ],
            [
                "30d474ccf61697d5"
            ]
        ]
    },
    {
        "id": "30d474ccf61697d5",
        "type": "function",
        "z": "942dc37616da95b9",
        "name": "bundle",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 380,
        "wires": [
            [
                "3844a813438a2714",
                "48fd90e793a4a8b2",
                "825b44b9fd184fc3",
                "df6d4b974a48f7fa"
            ]
        ],
        "icon": "font-awesome/fa-arrow-right"
    },
    {
        "id": "cdf4ebd091480a9a",
        "type": "function",
        "z": "942dc37616da95b9",
        "name": "extract name",
        "func": "const query = {\n    \"identifier\": msg.payload.identifier,\n}\nconst payload = {\n    \"$set\": {\n        \"name.sensor\": msg.payload.name\n    }\n}\nmsg.payload = payload;\nmsg.query = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "8728ec2d6c25fbe2"
            ]
        ]
    },
    {
        "id": "785ebd3632ffdd9a",
        "type": "function",
        "z": "942dc37616da95b9",
        "name": "extract description",
        "func": "const query = {\n    \"identifier\": msg.payload.identifier,\n}\nconst payload = {\n    \"$set\": {\n        \"description.sensor\": msg.payload.description\n    }\n}\nmsg.payload = payload;\nmsg.query = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 280,
        "wires": [
            [
                "8728ec2d6c25fbe2"
            ]
        ]
    },
    {
        "id": "8728ec2d6c25fbe2",
        "type": "mongodb out",
        "z": "942dc37616da95b9",
        "mongodb": "5456fd1ee54e6f5b",
        "name": "",
        "collection": "sensorMeta",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1690,
        "y": 240,
        "wires": []
    },
    {
        "id": "825b44b9fd184fc3",
        "type": "function",
        "z": "942dc37616da95b9",
        "name": "extract identifier",
        "func": "const query = {\n    \"identifier\": msg.payload.identifier,\n}\nconst payload = {\n    \"$set\": {\n        \"identifier\": msg.payload.identifier\n    }\n}\nmsg.payload = payload;\nmsg.query = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 320,
        "wires": [
            [
                "8728ec2d6c25fbe2"
            ]
        ]
    },
    {
        "id": "2724c4726d1f507c",
        "type": "influxdb out",
        "z": "942dc37616da95b9",
        "influxdb": "772344094d032536",
        "name": "",
        "measurement": "sensor-data",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IoT-smart-meter",
        "bucket": "smart-meter",
        "x": 1680,
        "y": 420,
        "wires": []
    },
    {
        "id": "df6d4b974a48f7fa",
        "type": "function",
        "z": "942dc37616da95b9",
        "name": "prepare insert",
        "func": "msg.payload = [\n    {\n        current_value: msg.payload.current_value,\n        total_value: msg.payload.total_value,\n        //time: msg.payload.current_time,\n    },\n    {\n        identifier: msg.payload.identifier,\n    }\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 420,
        "wires": [
            [
                "2724c4726d1f507c"
            ]
        ]
    },
    {
        "id": "48585067abecd3c0",
        "type": "inject",
        "z": "01d5ea2b4b2aded7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 370,
        "y": 100,
        "wires": [
            [
                "151e1aa976d55f05"
            ]
        ]
    },
    {
        "id": "151e1aa976d55f05",
        "type": "mongodb in",
        "z": "01d5ea2b4b2aded7",
        "mongodb": "5456fd1ee54e6f5b",
        "name": "",
        "collection": "sensorMeta",
        "operation": "find",
        "x": 650,
        "y": 100,
        "wires": [
            [
                "5282a478c16ce879"
            ]
        ]
    },
    {
        "id": "5282a478c16ce879",
        "type": "debug",
        "z": "01d5ea2b4b2aded7",
        "name": "sensorMeta",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "6f10ef03d8004555",
        "type": "inject",
        "z": "01d5ea2b4b2aded7",
        "name": "Delete Meta",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "collection",
                "v": "sensorMeta",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 1310,
        "y": 100,
        "wires": [
            [
                "855ce28333fee567",
                "feadcfd9f6ed7a4b"
            ]
        ],
        "icon": "font-awesome/fa-trash-o"
    },
    {
        "id": "855ce28333fee567",
        "type": "mongodb out",
        "z": "01d5ea2b4b2aded7",
        "mongodb": "5456fd1ee54e6f5b",
        "name": "",
        "collection": "",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1590,
        "y": 100,
        "wires": []
    },
    {
        "id": "81b0f0832e24e989",
        "type": "comment",
        "z": "01d5ea2b4b2aded7",
        "name": "READ DB",
        "info": "",
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "5ad5fae41a4aa69b",
        "type": "comment",
        "z": "01d5ea2b4b2aded7",
        "name": "[DANGER ZONE] Delete Stuff",
        "info": "",
        "x": 1340,
        "y": 40,
        "wires": []
    },
    {
        "id": "feadcfd9f6ed7a4b",
        "type": "debug",
        "z": "01d5ea2b4b2aded7",
        "name": "DELETED SENSOR - METADATA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 160,
        "wires": []
    },
    {
        "id": "47d9d4c29e19dd2e",
        "type": "influxdb out",
        "z": "d9a7c2f1673eaec9",
        "influxdb": "772344094d032536",
        "name": "",
        "measurement": "mytest",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "IoT-smart-meter",
        "bucket": "smart-meter",
        "x": 880,
        "y": 260,
        "wires": []
    },
    {
        "id": "44392ddedb389399",
        "type": "inject",
        "z": "d9a7c2f1673eaec9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 260,
        "wires": [
            [
                "b314aaa42c83ea62"
            ]
        ]
    },
    {
        "id": "b314aaa42c83ea62",
        "type": "function",
        "z": "d9a7c2f1673eaec9",
        "name": "function 1",
        "func": "msg.payload = [{\n    intValue: '10i',\n    numValue: 12,\n    randomValue: Math.random() * 10,\n    strValue: \"message2\"\n},\n{\n    tag1: \"sensor1\",\n    tag2: \"device2\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 260,
        "wires": [
            [
                "47d9d4c29e19dd2e"
            ]
        ]
    }
]