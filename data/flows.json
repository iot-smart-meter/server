[
    {
        "id": "4668cb4464f76ef5",
        "type": "tab",
        "label": "Website Homescreen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "942dc37616da95b9",
        "type": "tab",
        "label": "Sensor init",
        "disabled": false,
        "info": "Goal is to enable the first handshake with a sensor using a POST Request",
        "env": []
    },
    {
        "id": "2c287116b37742e8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "10628167c71ff284",
        "type": "ui_tab",
        "name": "Home",
        "icon": "mi-home",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "798c329928815309",
        "type": "ui_group",
        "name": "Uhrzeit",
        "tab": "10628167c71ff284",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1108013eedb4448",
        "type": "inject",
        "z": "4668cb4464f76ef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "e4362e3f947bfb54"
            ]
        ]
    },
    {
        "id": "a968c9e9907ecace",
        "type": "ui_text",
        "z": "4668cb4464f76ef5",
        "group": "798c329928815309",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "e4362e3f947bfb54",
        "type": "function",
        "z": "4668cb4464f76ef5",
        "name": "convert Timestamp",
        "func": "const fixedStr = (num) => {\n    return (\"0\" + num).slice(-2)\n}\nlet timestamp = new Date(msg.payload);\nconst [hour, minutes, seconds] = [\n    timestamp.getHours(),\n    timestamp.getMinutes(),\n    timestamp.getSeconds(),\n];\nmsg.payload = fixedStr(hour) + \":\" + fixedStr(minutes) + \":\" + fixedStr(seconds);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 100,
        "wires": [
            [
                "a968c9e9907ecace"
            ]
        ]
    },
    {
        "id": "e6256739bb89246f",
        "type": "http in",
        "z": "942dc37616da95b9",
        "name": "",
        "url": "sensor",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "f54cad9c07529db3"
            ]
        ]
    },
    {
        "id": "f54cad9c07529db3",
        "type": "RequestValidator",
        "z": "942dc37616da95b9",
        "name": "",
        "group_name": "",
        "query": "{}",
        "reqbody": "{\"id\":{\"type\":\"number\",\"required\":\"true\"}}",
        "method": "POST",
        "includeHeader": false,
        "headerSchema": "",
        "convert": true,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "1e77a137eea28190"
            ],
            [
                "fa41242f5012781f",
                "8608ada3ee7e3084"
            ]
        ]
    },
    {
        "id": "75ee7ab3e0c1136e",
        "type": "http response",
        "z": "942dc37616da95b9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "fa41242f5012781f",
        "type": "http response",
        "z": "942dc37616da95b9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "016875d485a1001d",
        "type": "comment",
        "z": "942dc37616da95b9",
        "name": "Error node at the bottom",
        "info": "",
        "x": 410,
        "y": 200,
        "wires": []
    },
    {
        "id": "1e77a137eea28190",
        "type": "function",
        "z": "942dc37616da95b9",
        "name": "function 1",
        "func": "var count = context.get(\"numSensors\") || 0;\ncount++;\ncontext.set(\"numSensors\", count);\nmsg.payload.sensorID = count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            [
                "75ee7ab3e0c1136e"
            ]
        ]
    },
    {
        "id": "8608ada3ee7e3084",
        "type": "debug",
        "z": "942dc37616da95b9",
        "name": "POST /sensor Invalid",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 240,
        "wires": []
    }
]